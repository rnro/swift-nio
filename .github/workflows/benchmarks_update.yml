name: Benchmarks update

on:
  workflow_call:
    inputs:
      benchmark_package_path:
        type: string
        description: "Path to the directory containing the benchmarking package. Defaults to ."
        default: "."
      swift_package_arguments:
        type: string
        description: "Arguments to the switch package command invocation e.g. `--disable-sandbox`"
      issue_url:
        type: string
        description: "URL to a GitHub issue/PR on which to comment regarding activity of this workflow"
      linux_5_9_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.9 Swift version matrix job. Defaults to true."
        default: true
      linux_5_10_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.10 Swift version matrix job. Defaults to true."
        default: true
      linux_6_0_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.0 Swift version matrix job. Defaults to true."
        default: true
      linux_nightly_next_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly matrix job for the next Swift version. Defaults to true."
        default: true
      linux_nightly_main_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly main Swift version matrix job. Defaults to true."
        default: true

# We will cancel previously-triggered workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-benchmarks_update
  cancel-in-progress: true

jobs:
  pr-comment:
    name: PR comment
    runs-on: "ubuntu-latest"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      COMMENTS_URL: "${{ inputs.issue_url }}/comments"
    steps:
      - name: Comment on issue
        if: inputs.issue_url
        run: |
          COMMENT="Attempting to update benchmark thresholds"
          curl -s -H "Authorization: token ${GITHUB_TOKEN}" -X POST "${COMMENTS_URL}" -d "{\"body\":\"$COMMENT\"}"

  linux:
    name: Linux (${{ matrix.config.swift_version }})
    runs-on: ubuntu-latest
    needs: pr-comment
    strategy:
      fail-fast: false
      matrix:
        # We specify only the major and minor of the docker images to automatically pick up the latest patch releases
        config:
          - image: "swift:5.9-jammy"
            swift_version: "5.9"
            enabled: ${{ inputs.linux_5_9_enabled }}
          - image: "swift:5.10-jammy"
            swift_version: "5.10"
            enabled: ${{ inputs.linux_5_10_enabled }}
          - image: "swift:6.0-jammy"
            swift_version: "6.0"
            enabled: ${{ inputs.linux_6_0_enabled }}
          - image: "swiftlang/swift:nightly-6.0-jammy"
            swift_version: "nightly-next"
            enabled: ${{ inputs.linux_nightly_next_enabled }}
          - image: "swiftlang/swift:nightly-6.1-jammy"
            swift_version: "nightly-main"
            enabled: ${{ inputs.linux_nightly_main_enabled }}
    container:
      image: ${{ matrix.config.image }}
    env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Install dependencies
        if: ${{ matrix.config.enabled }}
        run: |
          apt-get update -y -q && apt-get install -y -q libjemalloc-dev gh

      - name: Mark the workspace as safe
        if: ${{ matrix.config.enabled }}
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Checkout repository
        if: ${{ matrix.config.enabled }}
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout branch
        if: ${{ matrix.config.enabled }}
        run: |
          gh pr checkout "${{ github.event.issue.html_url }}"
          git config --global user.name 'benchmark-update-bot'
          git config --global user.email '<>'

      - name: Make Changes
        if: ${{ matrix.config.enabled }}
        env:
          SWIFT_VERSION: ${{ matrix.config.swift_version }}
          BENCHMARK_PACKAGE_PATH: ${{ inputs.benchmark_package_path }}
          SWIFT_PACKAGE_ARGUMENTS: ${{ inputs.swift_package_arguments }}
        run: |
          swift package --package-path "${BENCHMARK_PACKAGE_PATH}" ${SWIFT_PACKAGE_ARGUMENTS} --allow-writing-to-package-directory benchmark --format metricP90AbsoluteThresholds thresholds update --path "${BENCHMARK_PACKAGE_PATH}/Thresholds/${SWIFT_VERSION}/"

      - name: Commit Changes
        if: ${{ matrix.config.enabled }}
        env:
          SWIFT_VERSION: ${{ matrix.config.swift_version }}
        run: |
          git add Benchmarks/Thresholds/
          if [ -z "$(git status --untracked-files=no --porcelain)" ]; then
            echo "Nothing to commit" && exit 0
          fi
          git commit -m "Update benchmark thresholds (${SWIFT_VERSION})"

          # Different jobs can race to push their commits
          retries=5
          while [ $retries -gt 0 ]; do
            echo "Pushing commits (retries remaining: $retries)"
            if $(git push && git pull -r); then
              echo "Successfully pushed" && exit 0
            fi
            sleep 3
            : $((--retries))
          done
          exit 1
